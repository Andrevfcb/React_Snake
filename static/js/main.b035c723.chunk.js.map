{"version":3,"sources":["Snake.js","Food.js","Results.js","App.js","index.js"],"names":["Snake","props","snakeDot","map","dot","i","className","key","style","left","top","Food","food","Results","fontWeight","bestResult","startTitle","numberOfGames","randomFood","x","Math","floor","random","y","console","log","App","state","snakeDots","direction","start","numberOfDots","moveSnake","dots","head","length","push","shift","setState","onKeyDown","e","keyCode","setInterval","checkIfEat","snake","unshift","checkIfOutOfBorder","onGameOver","checkIfCollapsed","pop","forEach","document","onkeydown","this","alert","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b035c723.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Snake = (props) => {\r\n    return (\r\n    props.snakeDot.map((dot, i) => {\r\n        return (\r\n            <div className=\"snake-dot\" key={i} style={{left:`${dot[0]}%`, top:`${dot[1]}%`}}>\r\n            </div>\r\n        )\r\n    }))\r\n}\r\n\r\n\r\nexport default Snake;","import React from 'react';\r\n\r\nconst Food = (props) => {\r\n    return (\r\n        <div className=\"snake-food\" style={{left:`${props.food[0]}%`, top:`${props.food[1]}%`}}></div>\r\n    )\r\n}\r\n\r\nexport default Food;","import React from 'react';\r\n\r\nconst Results = (props) => {\r\n    return (\r\n        <div className=\"results\">\r\n        <div className=\"results-best\">Najlepszy wynik: <span style={{fontWeight: \"bold\"}}>{props.bestResult}</span></div>\r\n    {/* <h3 className=\"results-start\">{props.start ? null : <span>NACIŚNIJ STRZAŁKĘ W PRAWO BY ZACZĄĆ</span>}</h3> */}\r\n    <div className=\"results-start\">{props.startTitle}</div>\r\n        <div className=\"results-games\">Liczba gier: <span style={{fontWeight: \"bold\"}}>{props.numberOfGames}</span></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Results;","import React, {Component} from 'react';\nimport './App.css';\nimport Snake from './Snake';\nimport Food from './Food';\nimport Results from './Results';\n\nconst randomFood = () => {\n  let max = 98;\n  let x = Math.floor(Math.random()* (max/2))*2;\n  let y = Math.floor(Math.random()* (max/2))*2;\n  console.log(x);\n  console.log(y);\n  return [x,y]\n}\n\nclass App extends Component {\n\n  state = {\n    snakeDots: [\n      [0,0],\n      [2,0],\n      [4,0],\n    ],\n    food: randomFood(),\n    direction: \"RIGHT\",\n    start: false,\n    numberOfDots: 0,\n    bestResult: 0,\n    numberOfGames: 0\n  }\n\n  componentDidMount() {\n      document.onkeydown = this.onKeyDown\n  }\n\n  componentDidUpdate() {\n    this.checkIfEat();\n    this.checkIfOutOfBorder();\n    this.checkIfCollapsed();\n  }\n\n\n  moveSnake = () => {\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length - 1];\n    switch (this.state.direction) {\n       case 'RIGHT':\n         head = [head[0] + 2, head[1]]\n         break;\n         case 'LEFT':\n         head = [head[0] - 2, head[1]]\n         break;\n         case 'UP':\n         head = [head[0], head[1] - 2]\n         break;\n         case 'DOWN':\n         head = [head[0], head[1] + 2]\n         break;\n     }\n     dots.push(head);\n     dots.shift();\n     this.setState({\n       snakeDots: dots\n     })\n  }\n\n  onKeyDown = (e) => {\n    if (this.state.start === false && e.keyCode === 39) {\n      setInterval(this.moveSnake, 100)\n      this.state.start = true}\n    switch (e.keyCode) {\n      case 38:\n         this.setState({direction: 'UP'})\n         break;\n      case 40:\n          this.setState({direction: 'DOWN'})\n         break;\n      case 37:\n          this.setState({direction: 'LEFT'})\n         break;\n      case 39:\n          this.setState({direction: 'RIGHT'})\n         break;\n    }\n  }\n\n  checkIfEat = () => {\n    let snake = [...this.state.snakeDots]\n    let head = snake[snake.length - 1];\n    let food = this.state.food;\n    if(head[0] == food[0] && head[1] == food[1]) return (\n      this.setState({\n        food: randomFood(),\n        numberOfDots: this.state.numberOfDots + 1\n      }),\n      snake.unshift([]),\n      this.setState({\n        snakeDots: snake\n      }))\n    \n   }\n\n  checkIfOutOfBorder = () => {\n    let snake = [...this.state.snakeDots]\n    let head = snake[snake.length - 1];\n    if(head[0] == 100 || head[1] == 100 || head[0] < 0|| head[1] < 0) return this.onGameOver();\n   }\n\n  checkIfCollapsed = () => {\n    let snake = [...this.state.snakeDots];\n    let head = snake[snake.length - 1];\n    snake.pop();\n    snake.forEach(dot => {\n      if(head[0] == dot[0] && head[1] == dot[1]) return this.onGameOver();\n    })\n  }\n\n  startTitle = () => {\n    if(!this.state.start)return <h3>NACIŚNIJ STRZAŁKĘ W PRAWO BY ZACZĄĆ</h3>\n    else return null\n  }\n\n  onGameOver() {\n    alert(\"GAMEOVER!\")\n    if (this.state.numberOfDots > this.state.bestResult){\n      this.setState({bestResult: this.state.numberOfDots})\n    }\n      this.setState({\n        snakeDots: [\n          [0,0],\n          [2,0],\n          [4,0],\n        ],\n        food: randomFood(),\n        direction: \"RIGHT\",\n        numberOfDots: 0,\n        numberOfGames: this.state.numberOfGames + 1\n      })\n  }\n\n  render() {\n  return (\n    <>\n      <Results numberOfGames={this.state.numberOfGames} bestResult={this.state.bestResult} startTitle={this.startTitle()} />\n      {/* <Results numberOfGames={this.state.numberOfGames} bestResult={this.state.bestResult} /> */}\n    <div className=\"game-area\">\n      <Snake snakeDot={this.state.snakeDots}/>\n      <Food food={this.state.food}/>\n    </div>\n    </>\n  );\n}}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}